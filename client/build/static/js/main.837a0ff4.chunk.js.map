{"version":3,"sources":["store/toolState.js","components/SettingsBar.js","tools/Tool.js","tools/Brush.js","globalVars.js","store/canvasState.js","tools/Rect.js","tools/Circle.js","tools/Line.js","tools/Eraser.js","components/Toolbar.js","assets/img/preview.gif","components/Canvas.js","App.js","index.js"],"names":["tool","makeAutoObservable","this","color","fillColor","strokeColor","width","lineWidth","SettingsBar","className","htmlFor","id","type","defaultValue","min","max","onChange","e","toolState","setLineWidth","target","value","style","margin","setStrokeColor","Tool","canvas","socket","ctx","getContext","destroyEvents","onmousemove","onmousedown","onmouseup","fillStyle","strokeStyle","Brush","listen","mouseMoveHandler","bind","mouseDownHandler","mouseUpHandler","mouseDown","send","JSON","stringify","method","figure","beginPath","moveTo","pageX","offsetLeft","pageY","offsetTop","draw","x","y","lineTo","stroke","prevLineWidth","prevStrokeColor","GL","HOST","WS_HOST","sessionid","undoList","redoList","username","data","external","push","length","dataUrl","pop","toDataURL","img","Image","src","onload","clearRect","height","drawImage","axios","post","Rect","startX","startY","saved","currentX","currentY","w","h","rect","fill","prevColor","Circle","r","Math","sqrt","arc","PI","Line","name","endX","endY","Eraser","Toolbar","onClick","setTool","canvasState","setFillColor","changeColor","marginLeft","undo","redo","a","document","createElement","href","download","body","appendChild","click","removeChild","Canvas","observer","useState","modal","setModal","usernameRef","useRef","canvasRef","params","useParams","useEffect","setCanvas","current","get","then","res","WebSocket","setSocket","setSessionId","onopen","setInterval","onmessage","msg","parse","drawHandler","pushToUndo","staticDraw","Modal","show","onHide","previewImg","Header","Title","Body","required","ref","Footer","Button","variant","setUsername","onMouseUp","onMouseDown","App","path","to","Date","toString","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.837a0ff4.chunk.js","sourcesContent":["import {makeAutoObservable} from \"mobx\";\r\n\r\nclass ToolState {\r\n  tool = null\r\n\r\n  constructor() {\r\n    makeAutoObservable(this)\r\n  }\r\n\r\n  setTool(tool) {\r\n    this.tool = tool\r\n  }\r\n\r\n  setFillColor(color) {\r\n    this.tool.fillColor = color\r\n  }\r\n\r\n  setStrokeColor(color) {\r\n    this.tool.strokeColor = color\r\n  }\r\n\r\n  setLineWidth(width) {\r\n    this.tool.lineWidth = width\r\n  }\r\n\r\n}\r\n\r\nexport default new ToolState()\r\n","import React from 'react';\r\nimport '../styles/toolbar.scss'\r\nimport toolState from \"../store/toolState\";\r\n\r\nconst SettingsBar = () => {\r\n  return (\r\n    <div className=\"setting-bar\">\r\n      <label htmlFor=\"line-width\">Толщина линии</label>\r\n      <input\r\n        id=\"line-width\"\r\n        type=\"number\"\r\n        defaultValue={1}\r\n        min={1}\r\n        max={50}\r\n        onChange={e => toolState.setLineWidth(e.target.value)}\r\n        style={{margin: '0 10px'}}/>\r\n      <label htmlFor=\"stroke-color\">Цвет обводки</label>\r\n      <input\r\n        id=\"stroke-color\"\r\n        type=\"color\"\r\n        onChange={e => toolState.setStrokeColor(e.target.value)}/>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingsBar;\r\n","export default class Tool {\r\n  constructor(canvas, socket, id) {\r\n    this.canvas = canvas\r\n    this.socket = socket\r\n    this.id = id\r\n    this.ctx = canvas.getContext('2d')\r\n    this.destroyEvents()\r\n  }\r\n\r\n  set fillColor(color) {\r\n    this.ctx.fillStyle = color\r\n  }\r\n\r\n  set strokeColor(color) {\r\n    this.ctx.strokeStyle = color\r\n  }\r\n\r\n  set lineWidth(width) {\r\n    this.ctx.lineWidth = width\r\n  }\r\n\r\n  destroyEvents() {\r\n    this.canvas.onmousemove = null\r\n    this.canvas.onmousedown = null\r\n    this.canvas.onmouseup = null\r\n  }\r\n\r\n}\r\n","import Tool from \"./Tool\";\r\n\r\nexport default class Brush extends Tool {\r\n  constructor(canvas, socket, id) {\r\n    super(canvas, socket, id);\r\n    this.listen()\r\n  }\r\n\r\n  listen() {\r\n    this.canvas.onmousemove = this.mouseMoveHandler.bind(this)\r\n    this.canvas.onmousedown = this.mouseDownHandler.bind(this)\r\n    this.canvas.onmouseup = this.mouseUpHandler.bind(this)\r\n  }\r\n\r\n  mouseUpHandler(e) {\r\n    this.mouseDown = false\r\n    this.socket.send(JSON.stringify({\r\n      method: 'draw',\r\n      id: this.id,\r\n      figure: {\r\n        type: 'finish',\r\n      }\r\n    }))\r\n    this.ctx.beginPath()\r\n  }\r\n\r\n  mouseDownHandler(e) {\r\n    this.mouseDown = true\r\n    this.ctx.beginPath()\r\n    this.ctx.moveTo(e.pageX - e.target.offsetLeft, e.pageY - e.target.offsetTop)\r\n  }\r\n\r\n  mouseMoveHandler(e) {\r\n    if (this.mouseDown) {\r\n      this.draw(e.pageX - e.target.offsetLeft, e.pageY - e.target.offsetTop)\r\n      this.socket.send(JSON.stringify({\r\n        method: 'draw',\r\n        id: this.id,\r\n        figure: {\r\n          type: 'brush',\r\n          x: e.pageX - e.target.offsetLeft,\r\n          y: e.pageY - e.target.offsetTop,\r\n          lineWidth: this.ctx.lineWidth,\r\n          strokeColor: this.ctx.strokeStyle\r\n        }\r\n      }))\r\n    }\r\n  }\r\n\r\n  draw(x, y) {\r\n    this.ctx.lineTo(x, y)\r\n    this.ctx.stroke()\r\n  }\r\n\r\n  static staticDraw(ctx, x, y, lineWidth, strokeColor) {\r\n    let prevLineWidth = ctx.lineWidth\r\n    let prevStrokeColor = ctx.strokeStyle\r\n\r\n    ctx.lineWidth = lineWidth\r\n    ctx.strokeStyle = strokeColor\r\n    ctx.lineTo(x, y)\r\n    ctx.stroke()\r\n\r\n    ctx.lineWidth = prevLineWidth\r\n    ctx.strokeStyle = prevStrokeColor\r\n  }\r\n\r\n}\r\n","const GL = {\r\n  HOST: 'https://mihail-react-paint.herokuapp.com', // http://localhost:3000\r\n  WS_HOST: 'https://mihail-react-paint.herokuapp.com' // ws://localhost:3000\r\n}\r\n\r\nexport default GL\r\n","import {makeAutoObservable} from \"mobx\";\r\nimport axios from \"axios\";\r\nimport GL from '../globalVars'\r\n\r\nclass CanvasState {\r\n  canvas = null\r\n  socket = null\r\n  sessionid = null\r\n  undoList = []\r\n  redoList = []\r\n  username = ''\r\n\r\n  constructor() {\r\n    makeAutoObservable(this)\r\n  }\r\n\r\n  setUsername(username) {\r\n    this.username = username\r\n  }\r\n\r\n  setSessionId(id) {\r\n    this.sessionid = id\r\n  }\r\n\r\n  setSocket(socket) {\r\n    this.socket = socket\r\n  }\r\n\r\n  setCanvas(canvas) {\r\n    this.canvas = canvas\r\n  }\r\n\r\n  pushToUndo(data, external = false) {\r\n    this.undoList.push(data)\r\n\r\n    if (!external) {\r\n      this.socket.send(JSON.stringify({\r\n        method: 'pushToUndo',\r\n        id: this.sessionid,\r\n      }))\r\n    }\r\n  }\r\n\r\n  pushToRedo(data) {\r\n    this.redoList.push(data)\r\n  }\r\n\r\n  undo(external = false) {\r\n    if (!external) {\r\n      this.socket.send(JSON.stringify({\r\n        method: 'undo',\r\n        id: this.sessionid,\r\n      }))\r\n    }\r\n\r\n    let ctx = this.canvas.getContext('2d')\r\n    if (this.undoList.length > 0) {\r\n      let dataUrl = this.undoList.pop()\r\n      this.redoList.push(this.canvas.toDataURL())\r\n      let img = new Image()\r\n      img.src = dataUrl\r\n      img.onload = () => {\r\n        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\r\n        ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height)\r\n\r\n        axios.post(`${GL.HOST}/image?id=${this.sessionid}`, {img: this.canvas.toDataURL()})\r\n      }\r\n    }\r\n  }\r\n\r\n  redo(external = false) {\r\n    if (!external) {\r\n      this.socket.send(JSON.stringify({\r\n        method: 'redo',\r\n        id: this.sessionid,\r\n      }))\r\n    }\r\n\r\n    let ctx = this.canvas.getContext('2d')\r\n    if (this.redoList.length > 0) {\r\n      let dataUrl = this.redoList.pop()\r\n      this.undoList.push(this.canvas.toDataURL())\r\n      let img = new Image()\r\n      img.src = dataUrl\r\n      img.onload = () => {\r\n        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\r\n        ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height)\r\n\r\n        axios.post(`${GL.HOST}/image?id=${this.sessionid}`, {img: this.canvas.toDataURL()})\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default new CanvasState()\r\n","import Tool from \"./Tool\";\r\n\r\nexport default class Rect extends Tool {\r\n  constructor(canvas, socket, id) {\r\n    super(canvas, socket, id);\r\n    this.listen()\r\n  }\r\n\r\n  listen() {\r\n    this.canvas.onmousemove = this.mouseMoveHandler.bind(this)\r\n    this.canvas.onmousedown = this.mouseDownHandler.bind(this)\r\n    this.canvas.onmouseup = this.mouseUpHandler.bind(this)\r\n  }\r\n\r\n  mouseUpHandler(e) {\r\n    this.mouseDown = false\r\n    this.socket.send(JSON.stringify({\r\n      method: 'draw',\r\n      id: this.id,\r\n      figure: {\r\n        type: 'rect',\r\n        x: this.startX,\r\n        y: this.startY,\r\n        width: this.width,\r\n        height: this.height,\r\n        color: this.ctx.fillStyle,\r\n        lineWidth: this.ctx.lineWidth,\r\n        strokeColor: this.ctx.strokeStyle\r\n      }\r\n    }))\r\n    this.ctx.beginPath()\r\n  }\r\n\r\n  mouseDownHandler(e) {\r\n    this.mouseDown = true\r\n    this.ctx.beginPath()\r\n    this.startX = e.pageX - e.target.offsetLeft\r\n    this.startY = e.pageY - e.target.offsetTop\r\n    this.saved = this.canvas.toDataURL()\r\n  }\r\n\r\n  mouseMoveHandler(e) {\r\n    if (this.mouseDown) {\r\n      let currentX = e.pageX - e.target.offsetLeft\r\n      let currentY = e.pageY - e.target.offsetTop\r\n      this.width = currentX - this.startX\r\n      this.height = currentY - this.startY\r\n      this.draw(this.startX, this.startY, this.width, this.height)\r\n    }\r\n  }\r\n\r\n  draw(x, y, w, h) {\r\n    const img = new Image()\r\n    img.src = this.saved\r\n    img.onload = () => {\r\n      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\r\n      this.ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height)\r\n      this.ctx.beginPath()\r\n      this.ctx.rect(x, y, w, h)\r\n      this.ctx.fill()\r\n      this.ctx.stroke()\r\n    }\r\n  }\r\n\r\n  static staticDraw(ctx, x, y, w, h, color, lineWidth, strokeColor) {\r\n    let prevColor = ctx.fillStyle\r\n    let prevLineWidth = ctx.lineWidth\r\n    let prevStrokeColor = ctx.strokeStyle\r\n\r\n    ctx.fillStyle = color\r\n    ctx.lineWidth = lineWidth\r\n    ctx.strokeStyle = strokeColor\r\n    ctx.beginPath()\r\n    ctx.rect(x, y, w, h)\r\n    ctx.fill()\r\n    ctx.stroke()\r\n    ctx.beginPath()\r\n\r\n    ctx.fillStyle = prevColor\r\n    ctx.lineWidth = prevLineWidth\r\n    ctx.strokeStyle = prevStrokeColor\r\n  }\r\n\r\n}\r\n","import Tool from \"./Tool\";\r\n\r\nexport default class Circle extends Tool {\r\n  constructor(canvas, socket, id) {\r\n    super(canvas, socket, id);\r\n    this.listen()\r\n  }\r\n\r\n  listen() {\r\n    this.canvas.onmousemove = this.mouseMoveHandler.bind(this)\r\n    this.canvas.onmousedown = this.mouseDownHandler.bind(this)\r\n    this.canvas.onmouseup = this.mouseUpHandler.bind(this)\r\n  }\r\n\r\n  mouseUpHandler(e) {\r\n    this.mouseDown = false\r\n    this.socket.send(JSON.stringify({\r\n      method: 'draw',\r\n      id: this.id,\r\n      figure: {\r\n        type: 'circle',\r\n        x: this.startX,\r\n        y: this.startY,\r\n        r: this.r,\r\n        color: this.ctx.fillStyle,\r\n        lineWidth: this.ctx.lineWidth,\r\n        strokeColor: this.ctx.strokeStyle\r\n      }\r\n    }))\r\n    this.ctx.beginPath()\r\n  }\r\n\r\n  mouseDownHandler(e) {\r\n    this.mouseDown = true\r\n    this.ctx.beginPath()\r\n    this.startX = e.pageX - e.target.offsetLeft\r\n    this.startY = e.pageY - e.target.offsetTop\r\n    this.saved = this.canvas.toDataURL()\r\n  }\r\n\r\n  mouseMoveHandler(e) {\r\n    if (this.mouseDown) {\r\n      let currentX = e.pageX - e.target.offsetLeft\r\n      let currentY = e.pageY - e.target.offsetTop\r\n      let width = currentX - this.startX\r\n      let height = currentY - this.startY\r\n      this.r = Math.sqrt(width**2 + height**2)\r\n      this.draw(this.startX, this.startY, this.r)\r\n    }\r\n  }\r\n\r\n  draw(x, y, r) {\r\n    const img = new Image()\r\n    img.src = this.saved\r\n    img.onload = () => {\r\n      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\r\n      this.ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height)\r\n      this.ctx.beginPath()\r\n      this.ctx.arc(x, y, r, 0, 2*Math.PI)\r\n      this.ctx.fill()\r\n      this.ctx.stroke()\r\n    }\r\n  }\r\n\r\n  static staticDraw(ctx, x, y, r, color, lineWidth, strokeColor) {\r\n    let prevColor = ctx.fillStyle\r\n    let prevLineWidth = ctx.lineWidth\r\n    let prevStrokeColor = ctx.strokeStyle\r\n\r\n    ctx.fillStyle = color\r\n    ctx.lineWidth = lineWidth\r\n    ctx.strokeStyle = strokeColor\r\n    ctx.beginPath()\r\n    ctx.arc(x, y, r, 0, 2*Math.PI)\r\n    ctx.fill()\r\n    ctx.stroke()\r\n    ctx.beginPath()\r\n\r\n    ctx.fillStyle = prevColor\r\n    ctx.lineWidth = prevLineWidth\r\n    ctx.strokeStyle = prevStrokeColor\r\n  }\r\n\r\n}\r\n","import Tool from \"./Tool\";\r\n\r\nexport default class Line extends Tool {\r\n  constructor(canvas, socket, id) {\r\n    super(canvas, socket, id);\r\n    this.listen()\r\n    this.name = 'Line'\r\n  }\r\n\r\n  listen() {\r\n    this.canvas.onmousedown = this.mouseDownHandler.bind(this)\r\n    this.canvas.onmouseup = this.mouseUpHandler.bind(this)\r\n    this.canvas.onmousemove = this.mouseMoveHandler.bind(this)\r\n  }\r\n\r\n  mouseDownHandler(e) {\r\n    this.mouseDown = true\r\n    this.currentX = e.pageX-e.target.offsetLeft\r\n    this.currentY = e.pageY-e.target.offsetTop\r\n    this.ctx.beginPath()\r\n    this.ctx.moveTo(this.currentX, this.currentY)\r\n    this.saved = this.canvas.toDataURL()\r\n  }\r\n\r\n  mouseUpHandler(e) {\r\n    this.mouseDown = false\r\n    this.socket.send(JSON.stringify({\r\n      method: 'draw',\r\n      id: this.id,\r\n      figure: {\r\n        type: 'line',\r\n        startX: this.currentX,\r\n        startY: this.currentY,\r\n        endX: e.pageX-e.target.offsetLeft,\r\n        endY: e.pageY-e.target.offsetTop,\r\n        lineWidth: this.ctx.lineWidth,\r\n        strokeColor: this.ctx.strokeStyle\r\n      }\r\n    }))\r\n    this.ctx.beginPath()\r\n  }\r\n\r\n  mouseMoveHandler(e) {\r\n    if (this.mouseDown) {\r\n      this.draw(e.pageX-e.target.offsetLeft, e.pageY-e.target.offsetTop);\r\n    }\r\n  }\r\n\r\n\r\n  draw(x,y) {\r\n    const img = new Image()\r\n    img.src = this.saved\r\n    img.onload = () => {\r\n      this.ctx.clearRect(0,0, this.canvas.width, this.canvas.height)\r\n      this.ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height)\r\n      this.ctx.beginPath()\r\n      this.ctx.moveTo(this.currentX, this.currentY)\r\n      this.ctx.lineTo(x, y)\r\n      this.ctx.stroke()\r\n    }\r\n  }\r\n\r\n  static staticDraw(ctx, startX, startY, endX, endY, lineWidth, strokeColor) {\r\n    let prevLineWidth = ctx.lineWidth\r\n    let prevStrokeColor = ctx.strokeStyle\r\n\r\n    ctx.lineWidth = lineWidth\r\n    ctx.strokeStyle = strokeColor\r\n    ctx.beginPath()\r\n    ctx.moveTo(startX, startY)\r\n    ctx.lineTo(endX, endY)\r\n    ctx.stroke()\r\n    ctx.beginPath()\r\n\r\n    ctx.lineWidth = prevLineWidth\r\n    ctx.strokeStyle = prevStrokeColor\r\n  }\r\n\r\n}\r\n","import Tool from \"./Tool\";\r\n\r\nexport default class Eraser extends Tool {\r\n  constructor(canvas, socket, id) {\r\n    super(canvas, socket, id);\r\n    this.listen()\r\n  }\r\n\r\n  listen() {\r\n    this.canvas.onmousemove = this.mouseMoveHandler.bind(this)\r\n    this.canvas.onmousedown = this.mouseDownHandler.bind(this)\r\n    this.canvas.onmouseup = this.mouseUpHandler.bind(this)\r\n  }\r\n\r\n  mouseUpHandler(e) {\r\n    this.mouseDown = false\r\n    this.socket.send(JSON.stringify({\r\n      method: 'draw',\r\n      id: this.id,\r\n      figure: {\r\n        type: 'finish',\r\n      }\r\n    }))\r\n    this.ctx.beginPath()\r\n  }\r\n\r\n  mouseDownHandler(e) {\r\n    this.mouseDown = true\r\n    this.ctx.beginPath()\r\n    this.ctx.moveTo(e.pageX - e.target.offsetLeft, e.pageY - e.target.offsetTop)\r\n  }\r\n\r\n  mouseMoveHandler(e) {\r\n    if (this.mouseDown) {\r\n      this.draw(e.pageX - e.target.offsetLeft, e.pageY - e.target.offsetTop)\r\n      this.socket.send(JSON.stringify({\r\n        method: 'draw',\r\n        id: this.id,\r\n        figure: {\r\n          type: 'eraser',\r\n          x: e.pageX - e.target.offsetLeft,\r\n          y: e.pageY - e.target.offsetTop,\r\n          lineWidth: this.ctx.lineWidth,\r\n        }\r\n      }))\r\n    }\r\n  }\r\n\r\n  draw(x, y) {\r\n    let prevStrokeColor = this.ctx.strokeStyle\r\n\r\n    this.ctx.strokeStyle = 'white'\r\n    this.ctx.lineTo(x, y)\r\n    this.ctx.stroke()\r\n\r\n    this.ctx.strokeStyle = prevStrokeColor\r\n  }\r\n\r\n\r\n  static staticDraw(ctx, x, y, lineWidth) {\r\n    let prevLineWidth = ctx.lineWidth\r\n    let prevStrokeColor = ctx.strokeStyle\r\n\r\n    ctx.lineWidth = lineWidth\r\n    ctx.strokeStyle = 'white'\r\n    ctx.lineTo(x, y)\r\n    ctx.stroke()\r\n\r\n    ctx.lineWidth = prevLineWidth\r\n    ctx.strokeStyle = prevStrokeColor\r\n  }\r\n}\r\n","import React from 'react';\r\nimport '../styles/toolbar.scss'\r\nimport toolState from \"../store/toolState\";\r\nimport Brush from \"../tools/Brush\";\r\nimport canvasState from \"../store/canvasState\";\r\nimport Rect from \"../tools/Rect\";\r\nimport Circle from \"../tools/Circle\";\r\nimport Line from \"../tools/Line\";\r\nimport Eraser from \"../tools/Eraser\";\r\n\r\nconst Toolbar = () => {\r\n\r\n  const changeColor = e => {\r\n    toolState.setFillColor(e.target.value)\r\n  }\r\n\r\n  const download = () => {\r\n    const dataUrl = canvasState.canvas.toDataURL()\r\n    const a = document.createElement('a')\r\n    a.href = dataUrl\r\n    a.download = canvasState.sessionid + '.jpg'\r\n    document.body.appendChild(a)\r\n    a.click()\r\n    document.body.removeChild(a)\r\n  }\r\n\r\n  return (\r\n    <div className=\"toolbar\">\r\n      <button className=\"toolbar__btn brush\" onClick={() => toolState.setTool(new Brush(canvasState.canvas, canvasState.socket, canvasState.sessionid))}/>\r\n      <button className=\"toolbar__btn rect\" onClick={() => toolState.setTool(new Rect(canvasState.canvas, canvasState.socket, canvasState.sessionid))}/>\r\n      <button className=\"toolbar__btn circle\" onClick={() => toolState.setTool(new Circle(canvasState.canvas, canvasState.socket, canvasState.sessionid))}/>\r\n      <button className=\"toolbar__btn eraser\" onClick={() => toolState.setTool(new Eraser(canvasState.canvas, canvasState.socket, canvasState.sessionid))}/>\r\n      <button className=\"toolbar__btn line\" onClick={() => toolState.setTool(new Line(canvasState.canvas, canvasState.socket, canvasState.sessionid))}/>\r\n      <input type=\"color\" onChange={e => changeColor(e)} style={{marginLeft: 10}}/>\r\n      <button className=\"toolbar__btn undo\" onClick={() => canvasState.undo()}/>\r\n      <button className=\"toolbar__btn redo\" onClick={() => canvasState.redo()}/>\r\n      <button className=\"toolbar__btn save\" onClick={() => download()}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","export default __webpack_public_path__ + \"static/media/preview.aed74de5.gif\";","import React, {useEffect, useRef, useState} from 'react';\r\nimport '../styles/canvas.scss'\r\nimport {observer} from \"mobx-react-lite\";\r\nimport canvasState from \"../store/canvasState\";\r\nimport toolState from \"../store/toolState\";\r\nimport Brush from \"../tools/Brush\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {useParams} from 'react-router-dom'\r\nimport Rect from \"../tools/Rect\";\r\nimport Eraser from \"../tools/Eraser\";\r\nimport axios from 'axios'\r\nimport Circle from \"../tools/Circle\";\r\nimport Line from \"../tools/Line\";\r\nimport GL from \"../globalVars\";\r\nimport previewImg from '../assets/img/preview.gif'\r\n\r\nconst Canvas = observer(() => {\r\n\r\n  const [modal, setModal] = useState(true)\r\n  const usernameRef = useRef()\r\n  const canvasRef = useRef()\r\n  const params = useParams()\r\n\r\n  useEffect(() => {\r\n    if (canvasState.username) {\r\n      canvasState.setCanvas(canvasRef.current)\r\n      let ctx = canvasRef.current.getContext('2d')\r\n      axios.get(`${GL.HOST}/image?id=${params.id}`)\r\n        .then(res => {\r\n          const img = new Image()\r\n          img.src = res.data\r\n          img.onload = () => {\r\n            ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height)\r\n            ctx.drawImage(img, 0, 0, canvasRef.current.width, canvasRef.current.height)\r\n          }\r\n        })\r\n\r\n      const socket = new WebSocket(GL.WS_HOST)\r\n      canvasState.setSocket(socket)\r\n      canvasState.setSessionId(params.id)\r\n      toolState.setTool(new Brush(canvasRef.current, socket, params.id))\r\n      socket.onopen = () => {\r\n        socket.send(JSON.stringify({\r\n          id: params.id,\r\n          username: canvasState.username,\r\n          method: 'connection'\r\n        }))\r\n        setInterval(() => {\r\n          socket.send(JSON.stringify({\r\n            method: 'DO_NOT_SLEEP'\r\n          }))\r\n        }, 20000)\r\n      }\r\n      socket.onmessage = (e) => {\r\n        let msg = JSON.parse(e.data)\r\n        switch (msg.method) {\r\n          case 'connection':\r\n            break\r\n          case 'draw':\r\n            drawHandler(msg)\r\n            break\r\n          case 'undo':\r\n            canvasState.undo(true)\r\n            break\r\n          case 'redo':\r\n            canvasState.redo(true)\r\n            break\r\n          case 'pushToUndo':\r\n            canvasState.pushToUndo(canvasRef.current.toDataURL(), true)\r\n            break\r\n        }\r\n      }\r\n    }\r\n  }, [canvasState.username])\r\n\r\n  const drawHandler = msg => {\r\n    const figure = msg.figure\r\n    const ctx = canvasRef.current.getContext('2d')\r\n\r\n    switch (figure.type) {\r\n      case \"brush\":\r\n        Brush.staticDraw(ctx, figure.x, figure.y, figure.lineWidth, figure.strokeColor)\r\n        break\r\n      case \"eraser\":\r\n        Eraser.staticDraw(ctx, figure.x, figure.y, figure.lineWidth)\r\n        break\r\n      case \"rect\":\r\n        Rect.staticDraw(ctx, figure.x, figure.y, figure.width, figure.height, figure.color, figure.lineWidth, figure.strokeColor)\r\n        break\r\n      case \"circle\":\r\n        Circle.staticDraw(ctx, figure.x, figure.y, figure.r, figure.color, figure.lineWidth, figure.strokeColor)\r\n        break\r\n      case \"line\":\r\n        Line.staticDraw(ctx, figure.startX, figure.startY, figure.endX, figure.endY, figure.lineWidth, figure.strokeColor)\r\n        break\r\n      case \"finish\":\r\n        ctx.beginPath()\r\n        break\r\n\r\n    }\r\n  }\r\n\r\n  const mouseDownHandler = () => {\r\n    canvasState.pushToUndo(canvasRef.current.toDataURL())\r\n  }\r\n\r\n  const mouseUpHandler = () => {\r\n    axios.post(`${GL.HOST}/image?id=${params.id}`, {img: canvasRef.current.toDataURL()})\r\n  }\r\n\r\n  const connectHandler = () => {\r\n    if (usernameRef.current.value.length !== 0) {\r\n      canvasState.setUsername(usernameRef.current.value)\r\n      setModal(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"canvas\">\r\n      <Modal show={modal} onHide={() => {\r\n      }}>\r\n        <h1 style={{margin: 20}}>ПРОСТО ПОДЕЛИСЬ ССЫЛКОЙ С ДРУГОМ!</h1>\r\n        <div><img className=\"gif\" src={previewImg} /></div>\r\n        <Modal.Header>\r\n          <Modal.Title>Введите ваше имя</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <input required type=\"text\" ref={usernameRef}/>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"primary\" onClick={() => connectHandler()}>\r\n            Войти\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <canvas onMouseUp={() => mouseUpHandler()} onMouseDown={() => mouseDownHandler()} ref={canvasRef} width={600}\r\n              height={400}/>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Canvas;\r\n","import React from 'react'\nimport './styles/app.scss'\nimport SettingsBar from \"./components/SettingsBar\";\nimport Toolbar from \"./components/Toolbar\";\nimport Canvas from \"./components/Canvas\";\nimport {BrowserRouter, Switch, Route, Redirect} from 'react-router-dom'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"app\">\n        <Switch>\n          <Route path='/:id'>\n            <Toolbar/>\n            <SettingsBar/>\n            <Canvas/>\n          </Route>\n          <Redirect to={`f${(+new Date()).toString(16)}`}/>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}